# First we need to import two libraries panda and numpy
# This may be done using the below code
import pandas as pd
import numpy as np

# Now we will create a dataframe with three variables which name are: 
# Name, Age, Salary
# Using the pd.Series function we will give values to these variables
d = {'Name':pd.Series(['Ana','Andi','Rita','Ben','Sava','Leta','Berti',
   'Liza','Ben','Berti','Beta','Andi','Ben']),
   'Age':pd.Series([34,23,28,23,33,19,25,36,30,42,431,48,53]),
   'Salary':pd.Series([14,34,98,53,32,63,81,48,58,60,72,65,69]),
   'City':pd.Series(['Tirana','Tirana','Paris','Paris','Rome','Rome','Tirana','Rome','Paris','Berlin','Berlin','Tirana'])
}

#Create a DataFrame name Company_info using the pd.DataFrame(d)
Company_info = pd.DataFrame(d)
print (Company_info)

Now lets do some basic descriptive statistis calculations. We may use some of the basic functions to understand the data such as: min(), max(), sum(), mean(), std() , count(), median(), mode(), abs(), prod().
Instead of using these functions one by one we may also use the decribe() function which will return all these descriptive statistics for our numerical variables.

Company_info.describe()

What about categorical variables? We identigy here our top frequency of ategrical variable to be Ben.

Company_info['Name'].describe()

Using info() function we will give information about our dataframe. 

Company_info.info()

Some other functions related to shape of the data: 

Company_info['Age'].kurtosis() # only for Age

Company_info['Salary'].kurtosis() #only for Salary

Company_info.kurtosis() # All variables 

Company_info.skew()

To import a library that's not in Colaboratory by default, you can use !pip install or !apt-get install. S t use researchpy we are ding the below codes.
researchpy will give us information about the length of our variable, mean, standard deviation and 95% confidence error.

# !pip install researchpy
import researchpy  # we need to import researchpy to use the below functions for a summary output

# Summary statistics for a Series (single variable)
researchpy.summary_cont(Company_info['Age'])

# The same code for Salary 
# researchpy.summary_cont(Company_info['Salary'])

We may create a table with output for every variable in our dataframe using the code below. So we select from our dataframe variables 'Age' and 'Salary'.

# Summary statistics for multiple variables from our dataframe
researchpy.summary_cont(Company_info[['Age', 'Salary']])

For categorical variables the following may be done. We just change from summary_cont to summary_cat.

# Handles a single Pandas Series
researchpy.summary_cat(Company_info['Name'])

# Handles a single Pandas Series
researchpy.summary_cat(Company_info['City'])

# Can handle multiple Series, although the output is not pretty
researchpy.summary_cat(Company_info[['Name', 'City']])

# Results can easily be exported using many methods including the default
# Pandas exporting methods
results = researchpy.summary_cat(Company_info['City'])

results.to_csv("summary_people.csv", index= False)
